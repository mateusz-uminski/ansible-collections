name: tests

on:
  push:
    branches:
      - main
  pull_request:

env:
  PYTHON_VERSION: 3.11
  ANSIBLE_VERSION: 10.4.0
  MOLECULE_VERSION: 24.9.0
  MOLECULE_PLUGINS_VERSION: 23.5.0
  PYTEST_VERSION: 8.3.3
  PYTEST_TESTINFRA_VERSION: 10.1.1

jobs:
  envs:
    runs-on: ubuntu-22.04
    steps:
      - run: exit 0
    outputs:
      PYTHON_VERSION: ${{ env.PYTHON_VERSION }}
      ANSIBLE_VERSION: ${{ env.ANSIBLE_VERSION }}
      MOLECULE_VERSION: ${{ env.MOLECULE_VERSION }}
      MOLECULE_PLUGINS_VERSION: ${{ env.MOLECULE_PLUGINS_VERSION }}
      PYTEST_VERSION: ${{ env.PYTEST_VERSION }}
      PYTEST_TESTINFRA_VERSION: ${{ env.PYTEST_TESTINFRA_VERSION }}

  molecule:
    needs: envs
    strategy:
      fail-fast: false
      matrix:
        runner:
          - name: ubuntu-22.04
            arch: x86
        platform:
          - name: debian12-systemd
            context: https://github.com/mateusz-uminski/dockerfiles.git#debian12-systemd-v0.1.0
            dockerfile: debian12-systemd/Dockerfile
          - name: alma9-systemd
            context: https://github.com/mateusz-uminski/dockerfiles.git#alma9-systemd-v0.1.0
            dockerfile: alma9-systemd/Dockerfile
          - name: amazon2023-systemd
            context: https://github.com/mateusz-uminski/dockerfiles.git#amazon2023-systemd-v0.1.0
            dockerfile: amazon2023-systemd/Dockerfile
        collection:
          - name: docker
          - name: haproxy
          - name: consul
          - name: grafana
          - name: loki
          - name: admin
          - name: experimental
    name: "${{ matrix.collection.name }}: ${{ matrix.platform.name }}(${{ matrix.runner.arch }})"
    uses: mateusz-uminski/github-actions/.github/workflows/molecule-tests.yaml@main
    with:
      runner: ${{ matrix.runner.name }}
      python_version: ${{ matrix.collection.python_version || needs.envs.outputs.PYTHON_VERSION }}
      ansible_version: ${{ matrix.collection.ansible_version || needs.envs.outputs.ANSIBLE_VERSION }}
      molecule_version: ${{ matrix.collection.molecule_version || needs.envs.outputs.MOLECULE_VERSION }}
      molecule_plugins_version: ${{ matrix.collection.molecule_plugins_version || needs.envs.outputs.MOLECULE_PLUGINS_VERSION }}
      pytest_version: ${{ matrix.collection.pytest_version || needs.envs.outputs.PYTEST_VERSION }}
      pytest_testinfra_version: ${{ matrix.collection.pytest_testinfra_version || needs.envs.outputs.PYTEST_TESTINFRA_VERSION }}
      path: "${{ matrix.collection.name }}"
      docker_context: ${{ matrix.platform.context }}
      dockerfile_path: ${{ matrix.platform.dockerfile }}
      docker_image_name: ${{ matrix.platform.name }}

  pytest:
    needs: envs
    strategy:
      fail-fast: false
      matrix:
        runner:
          - name: ubuntu-22.04
            arch: x86
        collection:
          - name: experimental
    name: "${{ matrix.collection.name }}: plugins(${{ matrix.runner.arch }})"
    uses: mateusz-uminski/github-actions/.github/workflows/python-tests.yaml@main
    with:
      python_version: ${{ matrix.collection.python_version || needs.envs.outputs.PYTHON_VERSION }}
      requirements_file: "requirements.txt"
      tests_dir: "${{ matrix.collection.name }}/plugins/"

  results:
    runs-on: ubuntu-22.04
    if: ${{ always() && github.event.pull_request }}
    needs:
      - molecule
      - pytest
    steps:
      - run: exit 1
        if: >-
          ${{
            contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
