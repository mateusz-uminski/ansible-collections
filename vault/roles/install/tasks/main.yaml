- name: include debian specific tasks
  ansible.builtin.include_tasks: debian.yaml
  when: ansible_os_family | lower == "debian"

- name: include redhat specific tasks
  ansible.builtin.include_tasks: redhat.yaml
  when: ansible_os_family | lower == "redhat" and ansible_distribution | lower != "amazon"

- name: include amazonlinux specific tasks
  ansible.builtin.include_tasks: amazonlinux.yaml
  when: ansible_os_family | lower == "redhat" and ansible_distribution | lower == "amazon"

- name: render systemd service file
  ansible.builtin.template:
    src: vault.service.j2
    dest: /etc/systemd/system/vault.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: reload systemd

- name: render server config file
  ansible.builtin.template:
    src: config.hcl.j2
    dest: /etc/vault.d/vault.hcl
    owner: vault
    group: vault
    mode: 0644
  become: true
  notify: restart service

- name: ensure service is started and enabled
  ansible.builtin.service:
    name: vault
    state: started
    enabled: true
  become: true

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: set vault_addr fact
  ansible.builtin.set_fact:
    vault_addr: http://127.0.0.1:8200

- name: check if vault is initialized
  ansible.builtin.uri:
    url: "{{ vault_addr }}/v1/sys/init"
    method: GET
    body_format: json
  register: vault_status

- name: initialize vault
  delegate_to: "{{ ansible_play_hosts[0] }}"
  run_once: true
  when: not vault_status.json.initialized
  block:
    - name: initialize vault
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/sys/init"
        method: POST
        body_format: json
        body:
          secret_shares: "{{ vault_secret_shares }}"
          secret_threshold: "{{ vault_secret_threshold }}"
      register: vault_init

    - name: set vault_root_token and vault_unseal_keys facts
      ansible.builtin.set_fact:
        vault_root_token: "{{ vault_init.json.root_token }}"
        vault_unseal_keys: "{{ vault_init.json['keys'] }}"
      loop: "{{ ansible_play_hosts }}"

- name: unseal vault
  when: not vault_status.json.initialized
  block:
    - name: check vault seal status
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/sys/seal-status"
        method: GET
        headers:
          X-Vault-Token: "{{ vault_root_token }}"
      register: vault_seal_status

    - name: unseal vault
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/sys/unseal"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_root_token }}"
        body_format: json
        body:
          key: "{{ item }}"
      register: __vault_unseal_response
      until: __vault_unseal_response.status == 200
      retries: 10
      delay: 1
      loop: "{{ vault_unseal_keys[:vault_secret_threshold] }}"
      no_log: true
      when: vault_seal_status.json.sealed
