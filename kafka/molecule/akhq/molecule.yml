dependency:
  name: galaxy
  enabled: false
driver:
  name: docker
platforms:
  - name: controller
    image: ${MOLECULE_PLATFORM_IMAGE:-debian12-systemd}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    command: /sbin/init
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    published_ports:
      - 127.0.0.1:9093:9093/tcp
    networks:
      - name: "kafka-akhq"
    groups:
      - controlplane
  - name: broker
    image: ${MOLECULE_PLATFORM_IMAGE:-debian12-systemd}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    command: /sbin/init
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    published_ports:
      - 127.0.0.1:9092:9092/tcp
    networks:
      - name: "kafka-akhq"
    groups:
      - brokers
  - name: akhq
    image: ${MOLECULE_PLATFORM_IMAGE:-debian12-systemd}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    command: /sbin/init
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    published_ports:
      - 127.0.0.1:8080:8080/tcp
    networks:
      - name: "kafka-akhq"
    groups:
      - akhq
provisioner:
  name: ansible
  env:
    ANSIBLE_VERBOSITY: ${MOLECULE_ANSIBLE_VERBOSITY:-0}
verifier:
  name: testinfra
scenario:
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - destroy
